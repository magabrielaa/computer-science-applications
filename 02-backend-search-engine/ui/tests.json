{"data": [{"type": "report", "id": 1, "attributes": {"environment": {"Python": "3.9.9", "Platform": "macOS-12.1-arm64-arm-64bit"}, "summary": {"failed": 1, "num_tests": 1, "duration": 0.036563873291015625}, "created_at": "2022-02-02 19:07:56.194354"}, "relationships": {"tests": {"data": [{"id": 1, "type": "test"}]}}}], "included": [{"id": 1, "type": "test", "attributes": {"name": "test_courses.py::test_n[t0]", "duration": 0.016103251000000013, "run_index": 0, "setup": {"name": "setup", "duration": 0.007966166999999996, "outcome": "passed"}, "call": {"name": "call", "duration": 0.00011241700000000354, "outcome": "failed", "longrepr": "t = {'expected': [[], []], 'input': {}, 'test_num': 0}\n\n    @pytest.mark.parametrize(\"t\", TESTS)\n    def test_n(t):\n        '''\n        Do the Nth test.\n        '''\n    \n        err_msg = \"Test #{}\\n\".format(t[\"test_num\"])\n        err_msg += \"Input: {}\\n\"\n    \n        try:\n            actual = find_courses(t[\"input\"])\n        except Exception as e:\n            err_msg += \"Hit exception: {}\".format(e)\n            pytest.fail(err_msg)\n    \n        expected = t[\"expected\"]\n    \n>       check_type(actual, err_msg, t[\"input\"])\n\ntest_courses.py:132: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nactual = None, err_msg = 'Test #0\\nInput: {}\\n  Expected list/tuple of length 2.  Got {}', inputs = {}\n\n    def check_type(actual, err_msg, inputs):\n        '''\n        Check the type of the actual value.  It should\n        be a pair, where the first value is a list of strings\n        and the second is a list of lists.\n        '''\n    \n        if not isinstance(actual, (list, tuple)):\n            err_msg += \"  Expected list/tuple of length 2.  Got {}\"\n>           pytest.fail(err_msg.format(inputs, type(actual)))\nE           Failed: Test #0\nE           Input: {}\nE             Expected list/tuple of length 2.  Got <class 'NoneType'>\n\ntest_courses.py:28: Failed"}, "teardown": {"name": "teardown", "duration": 5.850000000001687e-05, "outcome": "passed"}, "outcome": "failed"}}]}